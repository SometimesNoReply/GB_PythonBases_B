# Homework:  Lesson 3. Task 5

"""
Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии
Enter  должна  выводиться  сумма  чисел.  Пользователь  может  продолжить  ввод  чисел,
разделенных  пробелом  и  снова  нажать  Enter.  Сумма  вновь  введенных  чисел  будет
добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ,
выполнение  программы  завершается.  Если  специальный  символ  введен  после  нескольких
чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого
завершить программу.
"""

# флаг останова программы
stop_flag = False

"""
- ПУСТЬ СТОП-СИМВОЛОМ БУДЕТ "*"
- СКОРЕЕ ВСЕГО РЕЧЬ НЕ ИДЕТ ОБ ОТЛАВЛИВАНИИ НАЖАТИЙ КЛАВИШ. ПОЗВОЛИМ СЕБЕ ОСТАНАВЛИВАТЬ ПРОГРАММУ ПОСЛЕ НАЖАТИЯ "Enter"
- БУДЕМ СЧИТАТЬ, ЧТО ПОЛЬЗОВАТЕЛЬ ВВОДИТ ДАННЫЕ ИДЕАЛЬНО, БЕЗ ОШИБОК (УПРОСТИМ НА ОБРАБОТКЕ ИСКЛЮЧЕНИЙ) 
"""


def data_input():
    """
    Функция считывает строку чисел, разделенных пробелами. Обрабатывает их и определяет их сумму

    УСЛОВИЯ:
    - Если в введенной строке вместо числа будет "*", то последующие числа отбрасываются, а возвращается сумма только
    предыдущих чисел.

    :return: возврачает сумму введенных чисел, согласно условиям.
    """
    global stop_flag
    i_list = input("Введите строку чисел, разделенных пробелом: ").split(" ")
    print(i_list)
    i_list = list(filter(lambda foo: foo != '', i_list))  # от множественных пробелов
    if '*' in set(i_list):
        stop_flag = True
        i_list = i_list[:i_list.index('*')]  # от стопсимвола и хвоста за ним
    i_list = list(map(lambda foo: float(foo), i_list))  # от строк
    print(i_list)

    return sum(i_list)


# ========================================================
i_sum = 0
while not stop_flag:
    i_sum += data_input()
    print(f"Накопительная сумма равна {i_sum}")

    if stop_flag:
        break
