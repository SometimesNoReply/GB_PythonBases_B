# Homework:  Lesson 4. Task 7

"""
 Реализовать генератор с помощью функции с ключевым словом ​yield​, создающим очередное
значение.  При  вызове  функции  должен  создаваться  объект-генератор.  Функция  должна
вызываться следующим образом: ​for el in fact(n)​. Функция отвечает за получение факториала
числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.

Подсказка:  факториал  числа  n  —  произведение  чисел  от  1  до  n.  Например,  факториал
четырёх 4! = 1 * 2 * 3 * 4 = 24.
"""

#    ЗАДАЧА НЕПОНЯТНА ОТ СЛОВА СОВСЕМ. ВОТ НИ КАПЕЛЬКИ НЕ ПОНЯТНО!
#    ПРЕДЛАГАТЬ ТАКУЮ ФОРМУЛИРОВКУ - ЭТО ПОЗОРИТЬ УЧЕБНОЕ ЗАВЕДЕНИЕ
#    Я БЫ ПРЕДЛОЖИЛ ЗАЧЕСТЬ ВСЕМ УЧЕНИКАМ ЭТУ ЗАДАЧУ АВТОМАТОМ КАК РЕШЕННУЮ


from math import factorial


# ТРЕБОВАНИЕ: Функция отвечает за получение факториала числа, ...
# РЕШЕНИЕ: пусть эту функцию называют fact(n)
def fact(n):
    result = 1
    while n > 1:
        result = result * n
        n -= 1
    return result


print("(1)", fact(5))


# ТРЕБОВАНИЕ: Функция  должна вызываться следующим образом: ​for el in fact(n)
# РЕШЕНИЕ: тогда  fact(n) должен вернуть итератор. переопределим функцию
# ТРЕБОВАНИЕ: Реализовать генератор с помощью функции с ключевым словом ​yield​, создающим очередное значение.
# ТРЕБОВАНИЕ: При  вызове  функции  должен  создаваться  объект-генератор.
def fact(n):
    foo_li = list(range(1, n + 1))
    # print(f"in fact({n}): foo_li={foo_li}")
    for i in foo_li:
        # print(f"going to yield {factorial(i)}")
        yield factorial(i)


# ТРЕБОВАНИЕ: При  вызове  функции  должен  создаваться  объект-генератор.
print("(2)", fact(5))


# ТРЕБОВАНИЕ: а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
# РЕШЕНИЕ: ой, ни при каких условиях не повторяйте это в вашем коде
n = 4           # определим так
print(f"Определим n={n}")
do_crutch = True
for el in fact(n):
    if do_crutch:
        do_crutch = False
        for i in range(1, factorial(n)+1):
            print(i, end = " ")


# следующая вещь не вписывается в рамки задания, если его понимать БУКВАЛЬНО, но...
print("")
for el in fact(n):
    print(f"число {el} является факториалом другого числа")



